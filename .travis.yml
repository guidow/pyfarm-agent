language: python
sudo: false
python:
  - 2.6
  - 2.7

services:
  - redis-server

cache:
  directories:
  - $HOME/.pipcache

env:
  global:
    - VIRTUALENV_ROOT=/tmp/virtualenv
    - VIRTUALENV_MASTER=$VIRTUALENV_ROOT/pyfarm-master
    - VIRTUALENV_AGENT=$VIRTUALENV_ROOT/pyfarm-agent
    - PIP_DOWNLOAD_CACHE=$HOME/.pipcache
    - MASTER_PYTHON_VERSION=3.4
    - PYFARM_AGENT_TEST_MASTER=127.0.0.1:5000  # where uwsgi is running
    - TDB_TYPE=postgres TDB_DRIVER=psycopg2 PYFARM_DATABASE_URI="postgresql+psycopg2://postgres:@127.0.0.1/pyfarm" PYFARM_CONFIG="prod" PYFARM_SECRET_KEY="travis"

  # TODO: test the agent against multiple configurations, independent of DB configuration.
  # NOTE: Do not use sqlite here as it breaks because of concurrency issues
  matrix:
    - PYFARM_AGENT_TEST_HTTP_SCHEME="http"
    - PYFARM_AGENT_TEST_HTTP_SCHEME="https"
    include:
      - python: 2.6
      - python: 2.7
      - language: generic
        os: osx
        env: PYVER=py26
      - language: generic
        os: osx
        env: PYVER=py27

matrix:
  fast_finish: true

before_install:
  - curl -o retry.sh https://raw.githubusercontent.com/pyfarm/pyfarm-build/master/travis/retry.sh
  - source retry.sh
  - mkdir -p $PIP_DOWNLOAD_CACHE

  # Create virtual environments for agent and master
  - deactivate  # travis virtualenv
  - virtualenv -p python$TRAVIS_PYTHON_VERSION $VIRTUALENV_AGENT
  - virtualenv -p python$MASTER_PYTHON_VERSION $VIRTUALENV_MASTER

install:
  # Master installation
  - . $VIRTUALENV_MASTER/bin/activate
  - if [[ $TDB_TYPE == "postgres" ]]; then psql -c "create database pyfarm;" -U postgres; fi
  - if [[ $TDB_TYPE == "mysql" ]]; then mysql -e "create database pyfarm;"; fi
  - if [[ $TDB_DRIVER != "" ]]; then retry pip install $TDB_DRIVER --quiet; fi
  - retry pip install uwsgi --quiet
  - retry pip install -e git+git://github.com/pyfarm/pyfarm-core.git#egg=pyfarm.core --egg --quiet
  - retry pip install -e git+git://github.com/pyfarm/pyfarm-master.git#egg=pyfarm.master --egg --quiet
  - pyfarm-tables --echo
  - uwsgi resources/uwsgi.ini
  - pip freeze
  - deactivate  # master virtualenv

  # Agent installation
  - . $VIRTUALENV_AGENT/bin/activate
  - retry pip install coverage python-coveralls mock --quiet
  - if [[ $PYFARM_AGENT_TEST_HTTP_SCHEME == "https" ]]; then retry pip install PyOpenSSL service_identity --quiet; fi
  - retry pip install -e git+git://github.com/pyfarm/pyfarm-core.git#egg=pyfarm.core --egg --quiet
  - retry pip install -e . --egg --quiet
  - pip freeze

script:
  - coverage run --branch `which trial` --reporter=bwverbose tests/test_agent
  - mv -v .coverage .coverage.1
  - coverage run --branch `which trial` --reporter=bwverbose tests/test_jobtypes
  - mv -v .coverage .coverage.2
  - coverage combine

after_success:
  - coveralls

after_failure:
  - cat /tmp/uwsgi.log
